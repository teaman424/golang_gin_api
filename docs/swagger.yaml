definitions:
  controller.LoginRequest:
    properties:
      account:
        example: Jack
        type: string
      password:
        example: "12345"
        type: string
    type: object
  controller.RefershRequest:
    properties:
      token:
        example: xxcjdjfcidasjcodioi
        type: string
    type: object
  middleware.AuthToken:
    properties:
      accessExp:
        example: 1623839849
        type: integer
      accessToken:
        example: dkdke3klwlwkkf...
        type: string
      refreshExp:
        example: 1623839849
        type: integer
      refreshToken:
        example: dkdke3klwlwkkf...
        type: string
      tokenType:
        example: Bearer
        type: string
    type: object
  model.Fruit:
    properties:
      calories:
        example: 20
        type: number
      id:
        example: 1
        type: integer
      name:
        example: 蘋果
        type: string
      original_name:
        example: 蘋果
        type: string
    type: object
  model.Habit:
    properties:
      favorite_list:
        example:
        - 櫻桃
        - 釋迦
        items:
          type: string
        type: array
      member_id:
        type: string
      nasty_list:
        example:
        - 櫻桃
        - 釋迦
        items:
          type: string
        type: array
    type: object
  model.Member:
    properties:
      account:
        type: string
      address:
        type: string
      gender:
        type: string
      id:
        type: string
      isVerify:
        type: boolean
      name:
        type: string
      phone:
        type: string
    type: object
  model.UpdateUser:
    properties:
      address:
        example: 地球
        type: string
      gender:
        example: m
        type: string
      name:
        example: Jack
        type: string
      phone:
        example: "0987654321"
        type: string
    type: object
  model.UpdateUserHabit:
    properties:
      favorite_list:
        example:
        - 櫻桃
        - 釋迦
        items:
          type: string
        type: array
      nasty_list:
        example:
        - 櫻桃
        - 釋迦
        items:
          type: string
        type: array
    type: object
host: localhost:8088
info:
  contact: {}
  description: Swagger API.
  title: Gin Swagger Demo
  version: "1.0"
paths:
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: refresh token
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/controller.RefershRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.AuthToken'
      summary: Using Refreah Token Update Access Token
      tags:
      - Auth
  /api/v1/auth/revoke:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.AuthToken'
      summary: Revoke Access Token and Refresh Token
      tags:
      - Auth
  /api/v1/food/fruit:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Fruit'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all friut's information list
      tags:
      - Food
  /api/v1/users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Add account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.AuthToken'
      summary: Create New User
      tags:
      - Users
  /api/v1/users/habit:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Habit'
      security:
      - ApiKeyAuth: []
      summary: Get user food habit information
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: update user habit info
        in: body
        name: userHabitInfo
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserHabit'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update user food habit information
      tags:
      - Users
  /api/v1/users/info:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Member'
      security:
      - ApiKeyAuth: []
      summary: Get user account information
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: update user info
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUser'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update user account information
      tags:
      - Users
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Add account
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.AuthToken'
      summary: Login User Account
      tags:
      - Users
  /api/v1/users/logout:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Logout user account
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
